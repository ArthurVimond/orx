buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
        classpath "com.netflix.nebula:nebula-kotlin-plugin:1.3.61"
        classpath "com.netflix.nebula:nebula-publishing-plugin:17.0.5"
        classpath "com.netflix.nebula:nebula-release-plugin:14.1.0"
        classpath "com.netflix.nebula:nebula-bintray-plugin:8.3.0"
    }
}



//allprojects {
//    group 'org.openrndr.extra'
//    version '0.0.30'
//}
//
//repositories {
//    mavenLocal()
//    mavenCentral()
//}

project.ext {
    openrndrVersion = "0.3.39"
    panelVersion = "0.3.21"
    kotlinVersion = "1.3.61"
    spekVersion = "2.0.9"
    libfreenectVersion = "0.5.7-1.5.2"
    gsonVersion = "2.8.6"
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'nebula.kotlin'
    apply plugin: 'nebula.contacts'
    apply plugin: 'nebula.info'
    apply plugin: 'nebula.release'
    apply plugin: 'nebula.maven-publish'

    apply plugin: 'nebula.nebula-bintray-publishing'
    apply plugin: 'nebula.source-jar'
    apply plugin: 'nebula.javadoc-jar'
    apply plugin: 'nebula.nebula-bintray-publishing'


    // selectively apply only the bintray plugin, snapshots are not published
    // nebula-bintray needs to happened after nebula-release since version isn't lazy in the bintray extension
    apply plugin: 'nebula.nebula-bintray-publishing'
    apply plugin: 'nebula.source-jar'

    group 'org.openrndr.extra'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url = "https://dl.bintray.com/openrndr/openrndr"
        }

        maven {
            url "https://dl.bintray.com/spekframework/spek"
        }
    }

    dependencies {
        implementation 'io.github.microutils:kotlin-logging:1.7.8'
        implementation "org.openrndr:openrndr-core:$openrndrVersion"
        implementation "org.openrndr:openrndr-filter:$openrndrVersion"
        implementation "org.openrndr:openrndr-shape:$openrndrVersion"
        implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.2'
        testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spekVersion"
        testImplementation "org.amshove.kluent:kluent:1.59"
        testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
        testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
        testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        runtimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    }

    contacts {
        'edwin@openrndr.org' {
            moniker 'Edwin Jakobs'
            github 'edwinRNDR'
        }
    }

    bintray {
        user = findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
        apiKey = findProperty('bintrayKey') ?: System.getenv('BINTRAY_KEY')
        userOrg = 'openrndr'
        repo = 'openrndr'
        pkgName = 'orx'
        gppSign = false
        syncToMavenCentral = false
        licenses = ['BSD-2-Clause']
        vcsUrl = 'https://github.com/openrndr/openrndr-panel.git'
        websiteUrl = 'https://www.openrndr.org'
        issueTrackerUrl = 'https://github.com/openrndr/openrndr-panel/issues'
        labels = ['creative-coding', 'realtime-rendering', 'opengl', 'gui']
    }


    test {
        useJUnitPlatform {
            includeEngines 'spek2'
        }
    }
}